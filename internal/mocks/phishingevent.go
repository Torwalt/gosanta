// Code generated by MockGen. DO NOT EDIT.
// Source: ./phishingevent.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	sqs "github.com/aws/aws-sdk-go/service/sqs"
	gomock "github.com/golang/mock/gomock"
)

// MockSQSGetDeleter is a mock of SQSGetDeleter interface.
type MockSQSGetDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockSQSGetDeleterMockRecorder
}

// MockSQSGetDeleterMockRecorder is the mock recorder for MockSQSGetDeleter.
type MockSQSGetDeleterMockRecorder struct {
	mock *MockSQSGetDeleter
}

// NewMockSQSGetDeleter creates a new mock instance.
func NewMockSQSGetDeleter(ctrl *gomock.Controller) *MockSQSGetDeleter {
	mock := &MockSQSGetDeleter{ctrl: ctrl}
	mock.recorder = &MockSQSGetDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSQSGetDeleter) EXPECT() *MockSQSGetDeleterMockRecorder {
	return m.recorder
}

// DeleteMessage mocks base method.
func (m *MockSQSGetDeleter) DeleteMessage(arg0 *sqs.DeleteMessageInput) (*sqs.DeleteMessageOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMessage", arg0)
	ret0, _ := ret[0].(*sqs.DeleteMessageOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteMessage indicates an expected call of DeleteMessage.
func (mr *MockSQSGetDeleterMockRecorder) DeleteMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMessage", reflect.TypeOf((*MockSQSGetDeleter)(nil).DeleteMessage), arg0)
}

// ReceiveMessage mocks base method.
func (m *MockSQSGetDeleter) ReceiveMessage(arg0 *sqs.ReceiveMessageInput) (*sqs.ReceiveMessageOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReceiveMessage", arg0)
	ret0, _ := ret[0].(*sqs.ReceiveMessageOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReceiveMessage indicates an expected call of ReceiveMessage.
func (mr *MockSQSGetDeleterMockRecorder) ReceiveMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReceiveMessage", reflect.TypeOf((*MockSQSGetDeleter)(nil).ReceiveMessage), arg0)
}
